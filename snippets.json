{"eex: for":{"body":["<%= for $2 <- $1 do %>","  $0","<% end %>"],"description":"prefixes: plvs,eex,eexfor,<% for","prefix":["plvs","eex","eexfor","<% for"],"scope":"elixir,phoenix-heex,html"},"Ecto: Schema changeset required attrs":{"body":["required_attrs = [$0]"],"description":"prefixes: plvs,es,escra","prefix":["plvs","es","escra"],"scope":"elixir,phoenix-heex,html"},"LiveView: New LiveView module":{"body":["defmodule $1 do","  use $2, :live_view","","  @impl Phoenix.LiveView","  def render(assigns) do","    ~H\"\"\"","    $0","    \"\"\"","  end","","  @impl Phoenix.LiveView","  def mount(${3: params}, ${4: session}, ${5: socket}) do","    $6","    {:ok, socket}","  end","end"],"description":"prefixes: plvs,plv,plvnlvm,defmodule","prefix":["plvs","plv","plvnlvm","defmodule"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent mount":{"body":["@impl Phoenix.LiveComponent","def mount(${1:socket}) do","  $0","  {:ok, ${2:socket}}","end",""],"description":"prefixes: plvs,plc,plcm","prefix":["plvs","plc","plcm"],"scope":"elixir,phoenix-heex,html"},"eex: Comment":{"body":["<%# $0 %>"],"description":"prefixes: plvs,eex,eexc,<%#","prefix":["plvs","eex","eexc","<%#"],"scope":"elixir,phoenix-heex,html"},"LiveView: @impl Phoenix.LiveComponent":{"body":["@impl Phoenix.LiveComponent"],"description":"prefixes: plvs,plv,@impl","prefix":["plvs","plv","@impl"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveView mount":{"body":["@impl Phoenix.LiveView","def mount(${1:params}, ${2:session}, ${3:socket}) do","  ${4:{:noreply, socket}}","end",""],"description":"prefixes: plvs,plv,plvm,def mount","prefix":["plvs","plv","plvm","def mount"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent render":{"body":["@impl Phoenix.LiveComponent","def render(${1:assigns}) do","  ~H\"\"\"","  $0","  \"\"\"","end",""],"description":"prefixes: plvs,plc,plcr","prefix":["plvs","plc","plcr"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent handle_event":{"body":["@impl Phoenix.LiveComponent","def handle_event(${1:event}, ${2:unsigned_params}, ${3:socket}) do","  $0","","  ${4:{:noreply, socket}}","end"],"description":"prefixes: plvs,plc,plche","prefix":["plvs","plc","plche"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context update":{"body":["@doc \"\"\"","Updates a $1.","","## Examples","","    iex> update_$1(%{field: value})","    {:ok, %${1/(.*)/${1:/pascalcase}/}{}}","","    iex> update_$1(%{field: bad_value})","    {:error, %Ecto.Chnageset{}}","","\"\"\"","def update_${1:name}(%${1/(.*)/${1:/pascalcase}/}{} = $1, attrs) do","  $1","  |> ${1/(.*)/${1:/pascalcase}/}.changeset(attrs)","  |> Repo.update()","end",""],"description":"prefixes: plvs,pctx,pctxu","prefix":["plvs","pctx","pctxu"],"scope":"elixir,phoenix-heex,html"},"eex: if":{"body":["<%= if $1 do %>","  $0","<% end %>"],"description":"prefixes: plvs,eex,eexif,<% if","prefix":["plvs","eex","eexif","<% if"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context delete":{"body":["@doc \"\"\"","  Deletes a $1.","","  ## Examples","","      iex> delete_$1($1)","      {:ok, %${1/(.*)/${1:/pascalcase}/}{}}","","      iex> delete_$1($1)","      {:error, %Ecto.Changeset{}}","\"\"\"","def delete_${1:name}(%${1/(.*)/${1:/pascalcase}/}{} = $1) do","  Repo.delete($1)","end",""],"description":"prefixes: plvs,pctx,pctxd","prefix":["plvs","pctx","pctxd"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context list":{"body":["@doc \"\"\"","Returns the list of $1s.","","## Examples","","    iex> list_$1()","    [%${1/(.*)/${1:/pascalcase}/}{}, ...]","","\"\"\"","def list_${1:name}s do","  Repo.all(${1/(.*)/${1:/pascalcase}/})","end",""],"description":"prefixes: plvs,pctx,pctxl","prefix":["plvs","pctx","pctxl"],"scope":"elixir,phoenix-heex,html"},"LiveView: @impl Phoenix.LiveView":{"body":["@impl Phoenix.LiveView"],"description":"prefixes: plvs,plv,@impl","prefix":["plvs","plv","@impl"],"scope":"elixir,phoenix-heex,html"},"Ecto: Schema changeset optional attrs":{"body":["optional_attrs = [$0]"],"description":"prefixes: plvs,es,esoa","prefix":["plvs","es","esoa"],"scope":"elixir,phoenix-heex,html"},"LiveView: handle_event":{"body":["@impl Phoenix.LiveView","def handle_event(${1:event}, ${2:unsigned_params}, ${3:socket}) do","  $0","","  ${4:{:noreply, socket}}","end",""],"description":"prefixes: plvs,plv,plvhe,def,def handle_event","prefix":["plvs","plv","plvhe","def","def handle_event"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Phoenix.Component.form/1":{"body":["<.form","  for={${1:@changeset}}","  let={${2:form}}","  phx-change=\"${3:validate}\"","  phx-submit=\"${4:submit}\"",">","  $0","</.form>",""],"description":"prefixes: plvs,pc,pcf","prefix":["plvs","pc","pcf"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent preload":{"body":["@impl Phoenix.LiveComponent","def preload(${1:list_of_assigns}) do","  $0","  $1","end",""],"description":"prefixes: plvs,plc,plcp","prefix":["plvs","plc","plcp"],"scope":"elixir,phoenix-heex,html"},"Ecto: Schema changeset":{"body":["def changeset(${1:name}, attrs) do","  required_attrs = [$2]","  optional_attrs = [$3]","","  ${1:name}","  |> cast(attrs, required_attrs ++ optional_attrs)","  |> validate_required(required_attrs)","end",""],"description":"prefixes: plvs,es,esc","prefix":["plvs","es","esc"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context get":{"body":["@doc \"\"\"","Gets a single $1.","","## Examples","","    iex> get_$1!(123)","    %${1/(.*)/${1:/pascalcase}/}{}","","    iex> get_$1!(456)","    ** (Ecto.NoResultsError)","","\"\"\"","def get_${1:name}!(id) do","  Repo.get!(${1/(.*)/${1:/pascalcase}/}, id)","end",""],"description":"prefixes: plvs,pctx,pctxg","prefix":["plvs","pctx","pctxg"],"scope":"elixir,phoenix-heex,html"},"LiveView: Render slot":{"body":["<%= render_slot(${1:@inner_block}) %>"],"description":"prefixes: plvs,plvrs","prefix":["plvs","plvrs"],"scope":"elixir,phoenix-heex,html"},"eex: inline with output":{"body":["<% $0 %>"],"description":"prefixes: plvs,eex,<%","prefix":["plvs","eex","<%"],"scope":"elixir,phoenix-heex,html"},"LiveView: handle_info":{"body":["@impl Phoenix.LiveView","def handle_info(${1:message}, ${2:socket}) do","  $0","","  {:noreply, ${3:socket}}","end"],"description":"prefixes: plvs,plv,plvhi,def,def handle_info","prefix":["plvs","plv","plvhi","def","def handle_info"],"scope":"elixir,phoenix-heex,html"},"LiveView: socket destructure":{"body":["%{ assigns: %{$1} } = $0"],"description":"prefixes: plvs,plv,plvsd,socket","prefix":["plvs","plv","plvsd","socket"],"scope":"elixir,phoenix-heex,html"},"LiveView: handle_cast":{"body":["@impl Phoenix.LiveView","def handle_cast(${1:msg}, ${2:socket}) do","  $0","","  ${3:{:noreply, socket}}","end",""],"description":"prefixes: plvs,plv,plvhi,def,def handle_cast","prefix":["plvs","plv","plvhi","def","def handle_cast"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent call":{"body":["<.live_component","  module={$1}","  id={\"$2\"}","  $0","/>",""],"description":"prefixes: plvs,plc,plcc","prefix":["plvs","plc","plcc"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context change":{"body":["@doc \"\"\"","Returns an `%Ecto.Changeset{}` for tracking $1 changes.","","## Examples","","    iex> change_$1(%{field: value})","    %Ecto.Changeset{data: %${1/(.*)/${1:/pascalcase}/}{}}","","\"\"\"","def change_${1:name}(%${1/(.*)/${1:/pascalcase}/}{} = $1, attrs \\\\\\\\ %{} ) do","  ${1/(.*)/${1:/pascalcase}/}.changeset($1, attrs)","end",""],"description":"prefixes: plvs,pctx,pctxch","prefix":["plvs","pctx","pctxch"],"scope":"elixir,phoenix-heex,html"},"eex: Return contents":{"body":["<%% $0 %>"],"description":"prefixes: plvs,eex,eexr,<%%","prefix":["plvs","eex","eexr","<%%"],"scope":"elixir,phoenix-heex,html"},"LiveView: handle_call":{"body":["@impl Phoenix.LiveView","def handle_call(${1:msg}, ${2:from}, ${3:socket}) do","  $0","","  ${4:{:noreply, socket}}","end",""],"description":"prefixes: plvs,plv,plvhi,def,def handle_call","prefix":["plvs","plv","plvhi","def","def handle_call"],"scope":"elixir,phoenix-heex,html"},"eex: cond":{"body":["<%= cond do %>","  <% $1 -> %>","    $2","<% end %>"],"description":"prefixes: plvs,eex,eexcond,<% cond","prefix":["plvs","eex","eexcond","<% cond"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Component definition":{"body":["def ${1:component}(${2:assigns}) do","  ~H\"\"\"","  $3","  \"\"\"","end"],"description":"prefixes: plvs,pc,pcd","prefix":["plvs","pc","pcd"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent assign helper":{"body":["def assign_$1(socket, $1) do","  assign(socket, $1: $1)","end"],"description":"prefixes: plvs,plc,plca,plcah","prefix":["plvs","plc","plca","plcah"],"scope":"elixir,phoenix-heex,html"},"LiveView: handle_params":{"body":["@impl Phoenix.LiveView","def handle_params(${1:event}, ${2:uri}, ${3:socket}) do","  $0","","  ${4:{:noreply, socket}}","end",""],"description":"prefixes: plvs,plv,plvhe,def,def handle_params","prefix":["plvs","plv","plvhe","def","def handle_params"],"scope":"elixir,phoenix-heex,html"},"LiveView: Phoenix.LiveComponent update":{"body":["@impl Phoenix.LiveComponent","def update(${1:assigns}, ${2:socket}) do","  $0","","  {:ok, socket}","end"],"description":"prefixes: plvs,plc,plcu","prefix":["plvs","plc","plcu"],"scope":"elixir,phoenix-heex,html"},"Phoenix: Context create":{"body":["@doc \"\"\"","Creates a $1.","","## Examples","","    iex> create_$1(%{field: value})","    {:ok, %${1/(.*)/${1:/pascalcase}/}{}}","","    iex> create_$1(%{field: bad_value})","    {:error, ...}","","\"\"\"","def create_${1:name}(attrs \\\\\\\\ %{}) do","  %${1/(.*)/${1:/pascalcase}/}{}","  |> ${1/(.*)/${1:/pascalcase}/}.changeset(attrs)","  |> Repo.insert()","end",""],"description":"prefixes: plvs,pctx,pctxcr","prefix":["plvs","pctx","pctxcr"],"scope":"elixir,phoenix-heex,html"},"LiveView: render implementation":{"body":["@impl Phoenix.LiveView","def render(${1:assigns}) do","  ~H\"\"\"","  $0","  \"\"\"","end",""],"description":"prefixes: plvs,plv,plvr,def render","prefix":["plvs","plv","plvr","def render"],"scope":"elixir,phoenix-heex,html"},"eex: Replace with result":{"body":["<%= $0 %>"],"description":"prefixes: plvs,eex,<%=","prefix":["plvs","eex","<%="],"scope":"elixir,phoenix-heex,html"},"LiveView: terminate":{"body":["@impl Phoenix.LiveView","def terminate(${1: reason}, ${2:socket}) do","  $3","end",""],"description":"prefixes: plvs,plv,plvt,def terminate","prefix":["plvs","plv","plvt","def terminate"],"scope":"elixir,phoenix-heex,html"},"eex: case":{"body":["<% case $1 do %>","  <% $2 -> %>","<% end %>"],"description":"prefixes: plvs,eex,eexcase,<% case","prefix":["plvs","eex","eexcase","<% case"],"scope":"elixir,phoenix-heex,html"}}